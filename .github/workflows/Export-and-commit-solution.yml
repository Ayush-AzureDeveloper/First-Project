name: Export-and-commit-solution
# Reusable workflow
# Export solution from DEV environment
#  unpack it and prepare, commit and push the changes

on:
  workflow_dispatch:

    inputs:

      # Change this value

      environment:
        type: choice
        description: Environment
        required: true
        options:
          - Development
          
      track_name:
        type: choice
        description: Track Name
        required: true
        options:
          - Customer Support
   
      solution_name:
        description: 'Solution Unique Name (Patch Id)'
        required: true

permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      GITHUB_BRANCH: ${{ github.ref }}
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      
    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{vars.ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN  }}
        tenant-id: ${{vars.TENANT_ID}}

    - name: Publish Solution
      uses: microsoft/powerplatform-actions/publish-solution@v1
      with:
        environment-url: ${{vars.ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANT_ID}}
        max-async-wait-time: 60

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{vars.ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{vars.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.repository.name}}/${{ github.event.inputs.current_solution_version }}/${{ github.event.inputs.solution_name }}_unmanaged.zip
        overwrite: true
        max-async-wait-time: 60

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.repository.name}}/${{ github.event.inputs.solution_name }}_unmanaged.zip
        solution-folder: ${{ github.event.repository.name}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true
    
    - name: Git Fetch and Commit 
      run: |
        git fetch --all  
        git config user.name "$(git log -n 1 --pretty=format:%an)"
        git config user.email "$(git log -n 1 --pretty=format:%ae)"
        git checkout main
        git add --all 
        git commit -m "Updates from the dev environment"
        git push

        
